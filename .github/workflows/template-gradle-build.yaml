name: Template Gradle Build

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGISTRY:
        required: true
      AWS_REPOSITORY:
        required: true
      SERVICE_NAME:
        required: true

jobs:
  gradle-build:
    strategy:
      matrix:
        ## LTS, latest 대상 빌드 테스트
        os: [ ubuntu-20.04 ]

        ## 추후, 버전 변경이 있을 경우
        java-version: [ 11 ]
        jdk-distribution: [ 'temurin' ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      ## 빌드를 위한 JDK 구성
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.jdk-distribution }}

      ## Gradle 캐싱
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key:
            ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*',
            '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      ## Gradle 에 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: ./${{ secrets.SERVICE_NAME }}

      ## Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build -x test
        working-directory: ./${{ secrets.SERVICE_NAME }}

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"

      ## AWS에 로그인합니다
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      ## ECR에 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      ## sample라는 ECR 리파지터리에 현재 시간 태그를 생성하고, 푸쉬
      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t rocket-backend:${{steps.current-time.outputs.formattedTime}} .
          docker tag rocket-backend:${{steps.current-time.outputs.formattedTime}} ${{ secrets.AWS_REGISTRY }}/${{ secrets.AWS_REPOSITORY }}:${{steps.current-time.outputs.formattedTime}}
          docker push ${{ secrets.AWS_REGISTRY }}/${{ secrets.AWS_REPOSITORY }}:${{steps.current-time.outputs.formattedTime}}
        working-directory: ./${{ secrets.SERVICE_NAME }}