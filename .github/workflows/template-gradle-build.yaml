name: Template Gradle Build

on:
  workflow_call:
    secrets:
      SERVICE-NAME:
        required: true

env:
  SERVICE-NAME: ${{ secrets.SERVICE-NAME }}

jobs:
  gradle-build:
    strategy:
      matrix:
        ## LTS, latest 대상 빌드 테스트
        os: [ubuntu-20.04]

        ## 추후, 버전 변경이 있을 경우
        java-version: [17]
        jdk-distribution: ['temurin']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      ## 빌드를 위한 JDK 구성
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.jdk-distribution }}

      ## Gradle 캐싱
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      ## Gradle 에 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      ## Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build

      ## 도커파일 업로드
      - name: Upload Dockerfile
        uses: actions/upload-artifact@v3
        with:
          name: Dockerfile_${{ env.SERVICE-NAME }}
          path: ./Dockerfile_${{ env.SERVICE-NAME }}
          retention-days: 1

      ## 빌드한 앱 업로드
      - name: Upload app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.SERVICE-NAME }}.jar
          path: ./${{ env.SERVICE-NAME }}/build/libs/${{ env.SERVICE-NAME }}.jar
          retention-days: 1